{"version":3,"file":"rx-document.js","names":["objectPath","distinctUntilChanged","filter","map","shareReplay","startWith","clone","trimDots","pluginMissing","flatClone","PROMISE_RESOLVE_NULL","RXJS_SHARE_REPLAY_DEFAULTS","getFromObjectOrThrow","newRxError","runPluginHooks","getDocumentDataOfRxChangeEvent","overwritable","getSchemaByObjectPath","throwIfIsStorageWriteError","modifierFromPublicToInternal","basePrototype","primaryPath","_this","isInstanceOfRxDocument","undefined","collection","schema","primary","_data","revision","_rev","deleted$","$","pipe","d","_deleted","deleted","getLatest","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","changeEvent","isLocal","documentId","prev","curr","get$","path","isDevMode","includes","finalFields","schemaObj","jsonSchema","data","get","populate","value","ref","refCollection","database","collections","type","findByIds","exec","then","res","valuesIterator","values","Array","from","findOne","objPath","valueObj","isArray","deepFreezeWhenDevMode","defineGetterSetter","toJSON","withMetaFields","_attachments","_meta","toMutableJSON","update","_updateObj","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","modify","mutationFunction","_context","oldData","newData","_saveData","incrementalModify","incrementalWriteQueue","addWrite","result","patch","Object","entries","forEach","k","v","incrementalPatch","docData","id","document","beforeDocumentUpdateWrite","storageInstance","bulkWrite","previous","writeResult","isError","error","_runHooks","success","remove","Promise","reject","deletedData","removedDocData","removed","incrementalRemove","newDoc","destroy","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","prototype","thisObj","pathProperties","properties","keys","key","fullPath","__defineGetter__","ret","defineProperty","enumerable","configurable","__defineSetter__","val","set","createWithConstructor","jsonData","doc","isRxDocument","obj","assign","validateChange"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import objectPath from 'object-path';\nimport {\n    Observable\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    RXJS_SHARE_REPLAY_DEFAULTS,\n    getFromObjectOrThrow\n} from './plugins/utils';\nimport {\n    newRxError\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    UpdateQuery,\n    CRDTEntry,\n    ModifyFunction\n} from './types';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event';\nimport { overwritable } from './overwritable';\nimport { getSchemaByObjectPath } from './rx-schema-helper';\nimport { throwIfIsStorageWriteError } from './rx-storage-helper';\nimport { modifierFromPublicToInternal } from './incremental-write';\n\nexport const basePrototype = {\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument<any> = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.$.pipe(\n            map((d: any) => d._deleted)\n        );\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._deleted;\n    },\n\n    getLatest(this: RxDocument): RxDocument {\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<RxDocumentData<any>> {\n        const _this: RxDocument = this as any;\n        return _this.collection.$.pipe(\n            filter(changeEvent => !changeEvent.isLocal),\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(_this.collection._docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        );\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (overwritable.isDevMode()) {\n            if (path.includes('.item.')) {\n                throw newRxError('DOC1', {\n                    path\n                });\n            }\n\n            if (path === this.primaryPath) {\n                throw newRxError('DOC2');\n            }\n\n            // final fields cannot be modified and so also not observed\n            if (this.collection.schema.finalFields.includes(path)) {\n                throw newRxError('DOC3', {\n                    path\n                });\n            }\n\n            const schemaObj = getSchemaByObjectPath(\n                this.collection.schema.jsonSchema,\n                path\n            );\n            if (!schemaObj) {\n                throw newRxError('DOC4', {\n                    path\n                });\n            }\n        }\n\n        return this.$\n            .pipe(\n                map(data => objectPath.get(data, path)),\n                distinctUntilChanged()\n            );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).exec().then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n\n    /**\n     * get data by objectPath\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        if (!this._data) return undefined;\n        let valueObj = objectPath.get(this._data, objPath);\n\n        // direct return if array or non-object\n        if (\n            typeof valueObj !== 'object' ||\n            Array.isArray(valueObj)\n        ) {\n            return overwritable.deepFreezeWhenDevMode(valueObj);\n        }\n\n        /**\n         * TODO find a way to deep-freeze together with defineGetterSetter\n         * so we do not have to do a deep clone here.\n         */\n        valueObj = clone(valueObj);\n        defineGetterSetter(\n            this.collection.schema,\n            valueObj,\n            objPath,\n            this as any\n        );\n        return valueObj;\n    },\n\n    toJSON(this: RxDocument, withMetaFields = false) {\n        if (!withMetaFields) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            delete (data as any)._deleted;\n            delete (data as any)._meta;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\n        return clone(this.toJSON(withMetaFields as any));\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optional)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\n        throw pluginMissing('crdt');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n    async modify<RxDocType>(\n        this: RxDocument<RxDocType>,\n        mutationFunction: ModifyFunction<RxDocType>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        const oldData = this._data;\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\n        return this._saveData(newData, oldData) as any;\n    },\n\n    /**\n     * runs an incremental update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    incrementalModify(\n        this: RxDocument,\n        mutationFunction: ModifyFunction<any>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        return this.collection.incrementalWriteQueue.addWrite(\n            this._data,\n            modifierFromPublicToInternal(mutationFunction)\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\n    },\n\n    patch<RxDocType>(\n        this: RxDocument<RxDocType>,\n        patch: Partial<RxDocType>\n    ) {\n        const oldData = this._data;\n        const newData = clone(oldData);\n        Object\n            .entries(patch)\n            .forEach(([k, v]) => {\n                (newData as any)[k] = v;\n            });\n        return this._saveData(newData, oldData);\n    },\n\n    /**\n     * patches the given properties\n     */\n    incrementalPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.incrementalModify((docData) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocType>(\n        this: RxDocument<RxDocType>,\n        newData: RxDocumentWriteData<RxDocType>,\n        oldData: RxDocumentData<RxDocType>\n    ): Promise<RxDocument<RxDocType>> {\n        newData = flatClone(newData);\n\n        // deleted documents cannot be changed\n        if (this._data._deleted) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\n        const writeResult = await this.collection.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'rx-document-save-data');\n\n        const isError = writeResult.error[this.primary];\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\n\n        await this.collection._runHooks('post', 'save', newData, this);\n        return this.collection._docCache.getCachedRxDocument(\n            getFromObjectOrThrow(writeResult.success, this.primary)\n        );\n    },\n\n    /**\n     * Remove the document.\n     * Notice that there is no hard delete,\n     * instead deleted documents get flagged with _deleted=true.\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        const collection = this.collection;\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        let removedDocData: RxDocumentData<any>;\n        return collection._runHooks('pre', 'remove', deletedData, this)\n            .then(async () => {\n                deletedData._deleted = true;\n                const writeResult = await collection.storageInstance.bulkWrite([{\n                    previous: this._data,\n                    document: deletedData\n                }], 'rx-document-remove');\n                const isError = writeResult.error[this.primary];\n                throwIfIsStorageWriteError(collection, this.primary, deletedData, isError);\n                return getFromObjectOrThrow(writeResult.success, this.primary);\n            })\n            .then((removed) => {\n                removedDocData = removed;\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => {\n                return this.collection._docCache.getCachedRxDocument(removedDocData);\n            });\n    },\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\n        return this.incrementalModify(async (docData) => {\n            await this.collection._runHooks('pre', 'remove', docData, this);\n            docData._deleted = true;\n            return docData;\n        }).then(async (newDoc) => {\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\n            return newDoc;\n        });\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        docData: RxDocumentData<any>\n    ) {\n        this.collection = collection;\n\n        // assume that this is always equal to the doc-data in the database\n        this._data = docData;\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function defineGetterSetter(\n    schema: any,\n    valueObj: any,\n    objPath = '',\n    thisObj = false\n) {\n    if (valueObj === null) return;\n\n\n    let pathProperties = getSchemaByObjectPath(\n        schema.jsonSchema,\n        objPath\n    );\n\n    if (typeof pathProperties === 'undefined') return;\n    if (pathProperties.properties) pathProperties = pathProperties.properties;\n\n    Object.keys(pathProperties)\n        .forEach(key => {\n            const fullPath = trimDots(objPath + '.' + key);\n\n            // getter - value\n            valueObj.__defineGetter__(\n                key,\n                function (this: RxDocument) {\n                    const _this: RxDocument = thisObj ? thisObj : (this as any);\n                    if (!_this.get || typeof _this.get !== 'function') {\n                        /**\n                         * When an object gets added to the state of a vuejs-component,\n                         * it happens that this getter is called with another scope.\n                         * To prevent errors, we have to return undefined in this case\n                         */\n                        return undefined;\n                    }\n                    const ret = _this.get(fullPath);\n                    return ret;\n                }\n            );\n            // getter - observable$\n            Object.defineProperty(valueObj, key + '$', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.get$(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // getter - populate_\n            Object.defineProperty(valueObj, key + '_', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.populate(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // setter - value\n            valueObj.__defineSetter__(key, function (\n                this: RxDocument,\n                val: any\n            ) {\n                const _this: any = thisObj ? thisObj : this;\n                return _this.set(fullPath, val);\n            });\n        });\n}\n\nexport function createWithConstructor<RxDocType>(\n    constructor: any,\n    collection: RxCollection<RxDocType>,\n    jsonData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType> | null {\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    if (typeof obj === 'undefined') return false;\n    return !!obj.isInstanceOfRxDocument;\n}\n\n\nexport function beforeDocumentUpdateWrite<RxDocType>(\n    collection: RxCollection<RxDocType>,\n    newData: RxDocumentWriteData<RxDocType>,\n    oldData: RxDocumentData<RxDocType>\n): Promise<any> {\n    /**\n     * Meta values must always be merged\n     * instead of overwritten.\n     * This ensures that different plugins do not overwrite\n     * each others meta properties.\n     */\n    newData._meta = Object.assign(\n        {},\n        oldData._meta,\n        newData._meta\n    );\n\n    // ensure modifications are ok\n    if (overwritable.isDevMode()) {\n        collection.schema.validateChange(oldData, newData);\n    }\n    return collection._runHooks('pre', 'save', newData);\n}\n"],"mappings":"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"}