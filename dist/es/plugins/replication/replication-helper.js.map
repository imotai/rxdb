{"version":3,"file":"replication-helper.js","names":["flatClone","DEFAULT_MODIFIER","d","Promise","resolve","swapDefaultDeletedTodeletedField","deletedField","doc","isDeleted","_deleted","swapdeletedFieldToDefaultDeleted","awaitRetry","collection","retryTime","window","addEventListener","navigator","onLine","promiseWait","listener","onlineAgain","res","removeEventListener","race","then"],"sources":["../../../../src/plugins/replication/replication-helper.ts"],"sourcesContent":["import type {\n    RxCollection,\n    WithDeleted\n} from '../../types';\nimport { flatClone } from '../../plugins/utils';\n\n// does nothing\nexport const DEFAULT_MODIFIER = (d: any) => Promise.resolve(d);\n\n\nexport function swapDefaultDeletedTodeletedField<RxDocType>(\n    deletedField: string,\n    doc: WithDeleted<RxDocType>\n): RxDocType {\n    if (deletedField === '_deleted') {\n        return doc;\n    } else {\n        doc = flatClone(doc);\n        const isDeleted = !!doc._deleted;\n        (doc as any)[deletedField] = isDeleted;\n        delete (doc as any)._deleted;\n        return doc;\n    }\n}\n\n\nexport function swapdeletedFieldToDefaultDeleted<RxDocType>(\n    deletedField: string,\n    doc: RxDocType\n): WithDeleted<RxDocType> {\n    if (deletedField === '_deleted') {\n        return doc as any;\n    } else {\n        doc = flatClone(doc);\n        const isDeleted = !!(doc as any)[deletedField];\n        (doc as any)._deleted = isDeleted;\n        delete (doc as any)[deletedField];\n        return doc as any;\n    }\n}\n\n\nexport function awaitRetry(\n    collection: RxCollection,\n    retryTime: number\n) {\n    if (\n        typeof window === 'undefined' ||\n        typeof window !== 'object' ||\n        typeof window.addEventListener === 'undefined' ||\n        navigator.onLine\n    ) {\n        return collection.promiseWait(retryTime);\n    }\n\n    let listener: any;\n    const onlineAgain = new Promise<void>(res => {\n        listener = () => {\n            window.removeEventListener('online', listener);\n            res();\n        };\n        window.addEventListener('online', listener);\n    });\n\n    return Promise.race([\n        onlineAgain,\n        collection.promiseWait(retryTime)\n    ]).then(() => {\n        window.removeEventListener('online', listener);\n    });\n}\n"],"mappings":"AAIA,SAASA,SAAS,QAAQ,qBAAqB;;AAE/C;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,CAAM;EAAA,OAAKC,OAAO,CAACC,OAAO,CAACF,CAAC,CAAC;AAAA;AAG9D,OAAO,SAASG,gCAAgC,CAC5CC,YAAoB,EACpBC,GAA2B,EAClB;EACT,IAAID,YAAY,KAAK,UAAU,EAAE;IAC7B,OAAOC,GAAG;EACd,CAAC,MAAM;IACHA,GAAG,GAAGP,SAAS,CAACO,GAAG,CAAC;IACpB,IAAMC,SAAS,GAAG,CAAC,CAACD,GAAG,CAACE,QAAQ;IAC/BF,GAAG,CAASD,YAAY,CAAC,GAAGE,SAAS;IACtC,OAAQD,GAAG,CAASE,QAAQ;IAC5B,OAAOF,GAAG;EACd;AACJ;AAGA,OAAO,SAASG,gCAAgC,CAC5CJ,YAAoB,EACpBC,GAAc,EACQ;EACtB,IAAID,YAAY,KAAK,UAAU,EAAE;IAC7B,OAAOC,GAAG;EACd,CAAC,MAAM;IACHA,GAAG,GAAGP,SAAS,CAACO,GAAG,CAAC;IACpB,IAAMC,SAAS,GAAG,CAAC,CAAED,GAAG,CAASD,YAAY,CAAC;IAC7CC,GAAG,CAASE,QAAQ,GAAGD,SAAS;IACjC,OAAQD,GAAG,CAASD,YAAY,CAAC;IACjC,OAAOC,GAAG;EACd;AACJ;AAGA,OAAO,SAASI,UAAU,CACtBC,UAAwB,EACxBC,SAAiB,EACnB;EACE,IACI,OAAOC,MAAM,KAAK,WAAW,IAC7B,OAAOA,MAAM,KAAK,QAAQ,IAC1B,OAAOA,MAAM,CAACC,gBAAgB,KAAK,WAAW,IAC9CC,SAAS,CAACC,MAAM,EAClB;IACE,OAAOL,UAAU,CAACM,WAAW,CAACL,SAAS,CAAC;EAC5C;EAEA,IAAIM,SAAa;EACjB,IAAMC,WAAW,GAAG,IAAIjB,OAAO,CAAO,UAAAkB,GAAG,EAAI;IACzCF,SAAQ,GAAG,oBAAM;MACbL,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAEH,SAAQ,CAAC;MAC9CE,GAAG,EAAE;IACT,CAAC;IACDP,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEI,SAAQ,CAAC;EAC/C,CAAC,CAAC;EAEF,OAAOhB,OAAO,CAACoB,IAAI,CAAC,CAChBH,WAAW,EACXR,UAAU,CAACM,WAAW,CAACL,SAAS,CAAC,CACpC,CAAC,CAACW,IAAI,CAAC,YAAM;IACVV,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAEH,SAAQ,CAAC;EAClD,CAAC,CAAC;AACN"}