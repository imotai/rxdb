{"version":3,"file":"file-util.js","names":["fs","path","blobBufferUtil","now","ensureFolderExists","folderPath","existsSync","mkdirSync","recursive","clearFolder","deleteFolder","rmdirSync","prepareFolders","database","options","directory","metaLoc","metaFileLocation","currentTime","metaData","createdAt","updatedAt","collectionStates","writeFileSync","JSON","stringify","Object","keys","collections","forEach","collectionName","join","writeToFile","location","data","toString","Promise","res","rej","writeFile","err","writeJsonToFile","getMeta","loc","readFile","metaContent","parse","setMeta","meta","documentFolder","docId"],"sources":["../../../../src/plugins/backup/file-util.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport {\n    BackupMetaFileContent,\n    BackupOptions,\n    BlobBuffer,\n    RxDatabase\n} from '../../types';\nimport { blobBufferUtil, now } from '../../plugins/utils';\n\n/**\n * ensure that the given folder exists\n */\nexport function ensureFolderExists(folderPath: string): void {\n    if (!fs.existsSync(folderPath)) {\n        fs.mkdirSync(folderPath, { recursive: true });\n    }\n}\n\n/**\n * deletes and recreates the folder\n */\nexport function clearFolder(folderPath: string): void {\n    deleteFolder(folderPath);\n    ensureFolderExists(folderPath);\n}\n\nexport function deleteFolder(folderPath: string): void {\n    // only remove if exists to not raise warning\n    if (fs.existsSync(folderPath)) {\n        fs.rmdirSync(folderPath, { recursive: true });\n    }\n}\n\nexport function prepareFolders(\n    database: RxDatabase,\n    options: BackupOptions\n) {\n    ensureFolderExists(options.directory);\n\n    const metaLoc = metaFileLocation(options);\n\n    if (!fs.existsSync(metaLoc)) {\n        const currentTime = now();\n        const metaData: BackupMetaFileContent = {\n            createdAt: currentTime,\n            updatedAt: currentTime,\n            collectionStates: {}\n        };\n        fs.writeFileSync(metaLoc, JSON.stringify(metaData), 'utf-8');\n    }\n\n    Object.keys(database.collections).forEach(collectionName => {\n        ensureFolderExists(\n            path.join(\n                options.directory,\n                collectionName\n            )\n        );\n    });\n}\n\nexport async function writeToFile(\n    location: string,\n    data: string | BlobBuffer\n): Promise<void> {\n    if (typeof data !== 'string') {\n        data = await blobBufferUtil.toString(data);\n    }\n    return new Promise(function (res, rej) {\n        fs.writeFile(\n            location,\n            data as string,\n            'utf-8',\n            (err) => {\n                if (err) {\n                    rej(err);\n                } else {\n                    res();\n                }\n            }\n        );\n    });\n}\n\nexport function writeJsonToFile(\n    location: string,\n    data: any\n): Promise<void> {\n    return writeToFile(\n        location,\n        JSON.stringify(data)\n    );\n}\n\nexport function metaFileLocation(options: BackupOptions): string {\n    return path.join(\n        options.directory,\n        'backup_meta.json'\n    );\n}\n\nexport function getMeta(options: BackupOptions): Promise<BackupMetaFileContent> {\n    const loc = metaFileLocation(options);\n    return new Promise((res, rej) => {\n        fs.readFile(loc, 'utf-8', (err, data) => {\n            if (err) {\n                rej(err);\n            } else {\n                const metaContent = JSON.parse(data);\n                res(metaContent);\n            }\n        });\n    });\n}\n\nexport function setMeta(\n    options: BackupOptions,\n    meta: BackupMetaFileContent\n): Promise<void> {\n    const loc = metaFileLocation(options);\n    return writeJsonToFile(loc, meta);\n}\n\nexport function documentFolder(\n    options: BackupOptions,\n    docId: string\n): string {\n    return path.join(\n        options.directory,\n        docId\n    );\n}\n"],"mappings":"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"}