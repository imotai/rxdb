{"version":3,"file":"websocket.js","names":["Subject","getFromMapOrThrow","getWebSocket","startSocketServer","exposeRxStorageRemote","getRxStorageRemote","createErrorAnswer","startRxStorageRemoteWebsocketServer","options","serverState","websocketByConnectionId","Map","messages$","exposeSettings","asObservable","storage","send","msg","ws","connectionId","JSON","stringify","exposeState","onConnection$","subscribe","onCloseHandlers","onclose","map","fn","on","messageString","message","parse","has","method","Error","set","next","WebsocketClientByUrl","getRxStorageRemoteWebsocket","identifier","url","websocketClientPromise","statics","then","websocketClient","socket","message$"],"sources":["../../../../src/plugins/storage-remote/websocket.ts"],"sourcesContent":["import { Subject } from 'rxjs';\nimport type {\n    WebSocket\n} from 'ws';\nimport type {\n    RxStorage\n} from '../../types';\nimport {\n    getFromMapOrThrow\n} from '../../plugins/utils';\nimport {\n    getWebSocket,\n    startSocketServer,\n    WebsocketWithRefCount\n} from '../replication-websocket';\nimport { exposeRxStorageRemote } from './remote';\nimport { getRxStorageRemote } from './rx-storage-remote';\nimport { createErrorAnswer } from './storage-remote-helpers';\nimport type {\n    MessageFromRemote,\n    MessageToRemote,\n    RxStorageRemoteExposeSettings,\n    RxStorageRemoteWebsocketClientOptions,\n    RxStorageRemoteWebsocketServerOptions,\n    RxStorageRemoteWebsocketServerState\n} from './storage-remote-types';\nexport function startRxStorageRemoteWebsocketServer(\n    options: RxStorageRemoteWebsocketServerOptions\n): RxStorageRemoteWebsocketServerState {\n    const serverState = startSocketServer(options);\n\n\n    const websocketByConnectionId = new Map<string, WebSocket>();\n    const messages$ = new Subject<MessageToRemote>();\n    const exposeSettings: RxStorageRemoteExposeSettings = {\n        messages$: messages$.asObservable(),\n        storage: options.storage,\n        send(msg) {\n            const ws = getFromMapOrThrow(websocketByConnectionId, msg.connectionId);\n            ws.send(JSON.stringify(msg));\n        }\n    };\n    const exposeState = exposeRxStorageRemote(exposeSettings);\n\n    serverState.onConnection$.subscribe(ws => {\n        const onCloseHandlers: Function[] = [];\n        ws.onclose = () => {\n            onCloseHandlers.map(fn => fn());\n        };\n        ws.on('message', (messageString: string) => {\n            const message: MessageToRemote = JSON.parse(messageString);\n            const connectionId = message.connectionId;\n            if (!websocketByConnectionId.has(connectionId)) {\n                /**\n                 * If first message is not 'create',\n                 * it is an error.\n                 */\n                if (message.method !== 'create') {\n                    ws.send(JSON.stringify(createErrorAnswer(message, new Error('First call must be a create call but is: ' + JSON.stringify(message)))));\n                    return;\n                }\n                websocketByConnectionId.set(connectionId, ws);\n            }\n            messages$.next(message);\n        });\n    });\n\n    return {\n        serverState,\n        exposeState\n    };\n}\n\n\n\n/**\n * Reuse connections to the same url.\n * This makes testing easier because we do not run into a connection limit.\n * It might be better to instead track the amount of open storage instances\n * and open/close the websocket client depending on the counter.\n */\nconst WebsocketClientByUrl = new Map<string, Promise<WebsocketWithRefCount>>();\n\nexport function getRxStorageRemoteWebsocket(options: RxStorageRemoteWebsocketClientOptions): RxStorage<any, any> {\n    const identifier = options.url + 'rx-remote-storage-websocket';\n    const messages$ = new Subject<MessageFromRemote>();\n    const websocketClientPromise = WebsocketClientByUrl.has(options.url) ?\n        getFromMapOrThrow(WebsocketClientByUrl, options.url) :\n        getWebSocket(options.url, identifier);\n    WebsocketClientByUrl.set(options.url, websocketClientPromise);\n    const storage = getRxStorageRemote({\n        identifier,\n        statics: options.statics,\n        messages$,\n        send(msg) {\n            return websocketClientPromise\n                .then(websocketClient => websocketClient.socket.send(JSON.stringify(msg)));\n        }\n    });\n    websocketClientPromise.then((websocketClient) => {\n        websocketClient.message$.subscribe(msg => messages$.next(msg));\n    });\n    return storage;\n}\n"],"mappings":"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"}