{"version":3,"file":"couchdb-helper.js","names":["flatClone","COUCHDB_NEW_REPLICATION_PLUGIN_IDENTITY_PREFIX","mergeUrlQueryParams","params","Object","entries","filter","_k","value","map","key","join","couchDBDocToRxDocData","primaryPath","couchDocData","doc","couchSwapIdToPrimary","_deleted","primaryKey","docData","_id","couchSwapPrimaryToId","idValue","ret","getDefaultFetch","window","fetch","bind"],"sources":["../../../../src/plugins/replication-couchdb/couchdb-helper.ts"],"sourcesContent":["import type { RxDocumentData, StringKeys, WithDeleted } from '../../types';\nimport { flatClone } from '../../plugins/utils';\nimport { URLQueryParams } from './couchdb-types';\n\n\nexport const COUCHDB_NEW_REPLICATION_PLUGIN_IDENTITY_PREFIX = 'rxdb-replication-couchdb-';\n\n\nexport function mergeUrlQueryParams(\n    params: URLQueryParams\n): string {\n    return Object.entries(params)\n        .filter(([_k, value]) => typeof value !== 'undefined')\n        .map(([key, value]) => key + '=' + value)\n        .join('&');\n}\n\nexport function couchDBDocToRxDocData<RxDocType>(\n    primaryPath: string,\n    couchDocData: any\n): WithDeleted<RxDocType> {\n    const doc = couchSwapIdToPrimary(primaryPath, couchDocData);\n\n    // ensure deleted flag is set.\n    doc._deleted = !!doc._deleted;\n\n    return doc;\n}\n\n\nexport function couchSwapIdToPrimary<T>(\n    primaryKey: StringKeys<RxDocumentData<T>>,\n    docData: any\n): any {\n    if (primaryKey === '_id' || docData[primaryKey]) {\n        return docData;\n    }\n    docData = flatClone(docData);\n    docData[primaryKey] = docData._id;\n    delete docData._id;\n\n    return docData;\n}\n\n/**\n * Swaps the primaryKey of the document\n * to the _id property.\n */\nexport function couchSwapPrimaryToId<RxDocType>(\n    primaryKey: StringKeys<RxDocumentData<RxDocType>>,\n    docData: any\n): RxDocType & { _id: string; } {\n    // optimisation shortcut\n    if (primaryKey === '_id') {\n        return docData;\n    }\n\n    const idValue = docData[primaryKey];\n    const ret = flatClone(docData);\n    delete ret[primaryKey];\n    ret._id = idValue;\n    return ret;\n}\n\n\nexport function getDefaultFetch() {\n    if (\n        typeof window === 'object' &&\n        (window as any)['fetch']\n    ) {\n        /**\n         * @link https://stackoverflow.com/a/47180009/3443137\n         */\n        return window.fetch.bind(window);\n    } else {\n        return fetch;\n    }\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,qBAAqB;AAI/C,OAAO,IAAMC,8CAA8C,GAAG,2BAA2B;AAGzF,OAAO,SAASC,mBAAmB,CAC/BC,MAAsB,EAChB;EACN,OAAOC,MAAM,CAACC,OAAO,CAACF,MAAM,CAAC,CACxBG,MAAM,CAAC;IAAA,IAAEC,EAAE;MAAEC,KAAK;IAAA,OAAM,OAAOA,KAAK,KAAK,WAAW;EAAA,EAAC,CACrDC,GAAG,CAAC;IAAA,IAAEC,GAAG;MAAEF,KAAK;IAAA,OAAME,GAAG,GAAG,GAAG,GAAGF,KAAK;EAAA,EAAC,CACxCG,IAAI,CAAC,GAAG,CAAC;AAClB;AAEA,OAAO,SAASC,qBAAqB,CACjCC,WAAmB,EACnBC,YAAiB,EACK;EACtB,IAAMC,GAAG,GAAGC,oBAAoB,CAACH,WAAW,EAAEC,YAAY,CAAC;;EAE3D;EACAC,GAAG,CAACE,QAAQ,GAAG,CAAC,CAACF,GAAG,CAACE,QAAQ;EAE7B,OAAOF,GAAG;AACd;AAGA,OAAO,SAASC,oBAAoB,CAChCE,UAAyC,EACzCC,OAAY,EACT;EACH,IAAID,UAAU,KAAK,KAAK,IAAIC,OAAO,CAACD,UAAU,CAAC,EAAE;IAC7C,OAAOC,OAAO;EAClB;EACAA,OAAO,GAAGnB,SAAS,CAACmB,OAAO,CAAC;EAC5BA,OAAO,CAACD,UAAU,CAAC,GAAGC,OAAO,CAACC,GAAG;EACjC,OAAOD,OAAO,CAACC,GAAG;EAElB,OAAOD,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASE,oBAAoB,CAChCH,UAAiD,EACjDC,OAAY,EACgB;EAC5B;EACA,IAAID,UAAU,KAAK,KAAK,EAAE;IACtB,OAAOC,OAAO;EAClB;EAEA,IAAMG,OAAO,GAAGH,OAAO,CAACD,UAAU,CAAC;EACnC,IAAMK,GAAG,GAAGvB,SAAS,CAACmB,OAAO,CAAC;EAC9B,OAAOI,GAAG,CAACL,UAAU,CAAC;EACtBK,GAAG,CAACH,GAAG,GAAGE,OAAO;EACjB,OAAOC,GAAG;AACd;AAGA,OAAO,SAASC,eAAe,GAAG;EAC9B,IACI,OAAOC,MAAM,KAAK,QAAQ,IACzBA,MAAM,CAAS,OAAO,CAAC,EAC1B;IACE;AACR;AACA;IACQ,OAAOA,MAAM,CAACC,KAAK,CAACC,IAAI,CAACF,MAAM,CAAC;EACpC,CAAC,MAAM;IACH,OAAOC,KAAK;EAChB;AACJ"}