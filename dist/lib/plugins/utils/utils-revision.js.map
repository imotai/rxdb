{"version":3,"file":"utils-revision.js","names":["parseRevision","revision","split","height","parseInt","hash","getHeightOfRevision","createRevision","databaseInstanceToken","previousDocData","previousRevision","_rev","previousRevisionHeigth","newRevisionHeight"],"sources":["../../../../src/plugins/utils/utils-revision.ts"],"sourcesContent":["import type {\n    RxDocumentData\n} from '../../types';\n\nexport function parseRevision(revision: string): { height: number; hash: string; } {\n    const split = revision.split('-');\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    };\n}\n\nexport function getHeightOfRevision(revision: string): number {\n    return parseRevision(revision).height;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision<RxDocType>(\n    databaseInstanceToken: string,\n    previousDocData?: RxDocumentData<RxDocType>\n): string {\n    const previousRevision = previousDocData ? previousDocData._rev : null;\n    const previousRevisionHeigth = previousRevision ? parseRevision(previousRevision).height : 0;\n    const newRevisionHeight = previousRevisionHeigth + 1;\n    return newRevisionHeight + '-' + databaseInstanceToken;\n}\n\n"],"mappings":";;;;;;;;AAIO,SAASA,aAAa,CAACC,QAAgB,EAAqC;EAC/E,IAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;EACjC,OAAO;IACHC,MAAM,EAAEC,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9BG,IAAI,EAAEH,KAAK,CAAC,CAAC;EACjB,CAAC;AACL;AAEO,SAASI,mBAAmB,CAACL,QAAgB,EAAU;EAC1D,OAAOD,aAAa,CAACC,QAAQ,CAAC,CAACE,MAAM;AACzC;;AAEA;AACA;AACA;AACO,SAASI,cAAc,CAC1BC,qBAA6B,EAC7BC,eAA2C,EACrC;EACN,IAAMC,gBAAgB,GAAGD,eAAe,GAAGA,eAAe,CAACE,IAAI,GAAG,IAAI;EACtE,IAAMC,sBAAsB,GAAGF,gBAAgB,GAAGV,aAAa,CAACU,gBAAgB,CAAC,CAACP,MAAM,GAAG,CAAC;EAC5F,IAAMU,iBAAiB,GAAGD,sBAAsB,GAAG,CAAC;EACpD,OAAOC,iBAAiB,GAAG,GAAG,GAAGL,qBAAqB;AAC1D"}