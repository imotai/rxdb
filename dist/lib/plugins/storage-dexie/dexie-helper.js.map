{"version":3,"file":"dexie-helper.js","names":["DEXIE_DOCS_TABLE_NAME","DEXIE_DELETED_DOCS_TABLE_NAME","DEXIE_CHANGES_TABLE_NAME","RX_STORAGE_NAME_DEXIE","DEXIE_STATE_DB_BY_NAME","Map","REF_COUNT_PER_DEXIE_DB","getDexieDbWithTables","databaseName","collectionName","settings","schema","primaryPath","getPrimaryFieldOfPrimaryKey","primaryKey","dexieDbName","version","state","get","useSettings","flatClone","autoOpen","dexieDb","Dexie","dexieStoresSettings","getDexieStoreSchema","stores","open","dexieTable","dexieDeletedTable","set","closeDexieDb","statePromise","prevCount","newCount","close","sortDirectionToMingo","direction","getDexieSortComparator","_schema","query","mingoSortObject","sort","newRxError","forEach","sortBlock","key","Object","keys","values","fun","a","b","sorted","getMingoQuery","find","first","next","ensureNoBooleanIndex","indexes","checkedFields","Set","index","fields","toArray","field","has","add","schemaObj","getSchemaByObjectPath","type","DEXIE_PIPE_SUBSTITUTE","dexieReplaceIfStartsWithPipe","str","split","length","map","part","join","startsWith","withoutFirst","substring","dexieReplaceIfStartsWithPipeRevert","fromStorageToDexie","documentData","Array","isArray","row","ret","entries","value","fromDexieToStorage","rxJsonSchema","parts","push","arIndex","getDocsInDb","internals","docIds","Promise","all","bulkGet","nonDeletedDocsInDb","deletedDocsInDb","docsInDb","slice","doc","idx"],"sources":["../../../../src/plugins/storage-dexie/dexie-helper.ts"],"sourcesContent":["import type {\n    DeterministicSortComparator\n} from 'event-reduce-js';\nimport type {\n    DexieStorageInternals,\n    MangoQuery,\n    RxDocumentData,\n    RxJsonSchema\n} from '../../types';\nimport { Dexie } from 'dexie';\nimport { DexieSettings } from '../../types';\nimport { flatClone, toArray } from '../utils';\nimport { newRxError } from '../../rx-error';\nimport {\n    getPrimaryFieldOfPrimaryKey,\n    getSchemaByObjectPath\n} from '../../rx-schema-helper';\nimport { getMingoQuery } from '../../rx-query-mingo';\n\nexport const DEXIE_DOCS_TABLE_NAME = 'docs';\nexport const DEXIE_DELETED_DOCS_TABLE_NAME = 'deleted-docs';\nexport const DEXIE_CHANGES_TABLE_NAME = 'changes';\n\nexport const RX_STORAGE_NAME_DEXIE = 'dexie';\n\nconst DEXIE_STATE_DB_BY_NAME: Map<string, DexieStorageInternals> = new Map();\nconst REF_COUNT_PER_DEXIE_DB: Map<DexieStorageInternals, number> = new Map();\nexport function getDexieDbWithTables(\n    databaseName: string,\n    collectionName: string,\n    settings: DexieSettings,\n    schema: RxJsonSchema<any>\n): DexieStorageInternals {\n    const primaryPath = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\n    let state = DEXIE_STATE_DB_BY_NAME.get(dexieDbName);\n    if (!state) {\n        state = (async () => {\n            /**\n             * IndexedDB was not designed for dynamically adding tables on the fly,\n             * so we create one dexie database per RxDB storage instance.\n             * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\n             */\n            const useSettings = flatClone(settings);\n            useSettings.autoOpen = false;\n            const dexieDb = new Dexie(dexieDbName, useSettings);\n            const dexieStoresSettings = {\n                [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\n                [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\n                /**\n                 * Instead of adding {deleted: false} to every query we run over the document store,\n                 * we move deleted documents into a separate store where they can only be queried\n                 * by primary key.\n                 * This increases performance because it is way easier for the query planner to select\n                 * a good index and we also do not have to add the _deleted field to every index.\n                 *\n                 * We also need the [_meta.lwt+' + primaryPath + '] index for getChangedDocumentsSince()\n                 */\n                [DEXIE_DELETED_DOCS_TABLE_NAME]: primaryPath + ',_meta.lwt,[_meta.lwt+' + primaryPath + ']'\n            };\n\n            dexieDb.version(1).stores(dexieStoresSettings);\n            await dexieDb.open();\n            return {\n                dexieDb,\n                dexieTable: (dexieDb as any)[DEXIE_DOCS_TABLE_NAME],\n                dexieDeletedTable: (dexieDb as any)[DEXIE_DELETED_DOCS_TABLE_NAME]\n            };\n        })();\n\n        DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\n        REF_COUNT_PER_DEXIE_DB.set(state, 0);\n    }\n\n    return state;\n}\n\nexport async function closeDexieDb(statePromise: DexieStorageInternals) {\n    const state = await statePromise;\n    const prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\n    const newCount = (prevCount as any) - 1;\n    if (newCount === 0) {\n        state.dexieDb.close();\n        REF_COUNT_PER_DEXIE_DB.delete(statePromise);\n    } else {\n        REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\n    }\n}\n\n\nfunction sortDirectionToMingo(direction: 'asc' | 'desc'): 1 | -1 {\n    if (direction === 'asc') {\n        return 1;\n    } else {\n        return -1;\n    }\n}\n\n/**\n * This function is at dexie-helper\n * because we need it in multiple places.\n */\nexport function getDexieSortComparator<RxDocType>(\n    _schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: MangoQuery<RxDocType>\n): DeterministicSortComparator<RxDocType> {\n    const mingoSortObject: {\n        [fieldName: string]: 1 | -1;\n    } = {};\n\n    if (!query.sort) {\n        throw newRxError('SNH', { query });\n    }\n\n    query.sort.forEach(sortBlock => {\n        const key = Object.keys(sortBlock)[0];\n        const direction = Object.values(sortBlock)[0];\n        mingoSortObject[key] = sortDirectionToMingo(direction);\n    });\n\n    const fun: DeterministicSortComparator<RxDocType> = (a: RxDocType, b: RxDocType) => {\n        const sorted = getMingoQuery({}).find([a, b], {}).sort(mingoSortObject);\n        const first = sorted.next();\n        if (first === a) {\n            return -1;\n        } else {\n            return 1;\n        }\n    };\n\n    return fun;\n}\n\n\nexport function ensureNoBooleanIndex(schema: RxJsonSchema<any>) {\n    if (!schema.indexes) {\n        return;\n    }\n    const checkedFields = new Set<string>();\n    schema.indexes.forEach(index => {\n        const fields = toArray(index);\n        fields.forEach(field => {\n            if (checkedFields.has(field)) {\n                return;\n            }\n            checkedFields.add(field);\n            const schemaObj = getSchemaByObjectPath(schema, field);\n            if (schemaObj.type === 'boolean') {\n                throw newRxError('DXE1', {\n                    schema,\n                    index,\n                    field\n                });\n            }\n        });\n    });\n}\n\n\n\n/**\n * It is not possible to set non-javascript-variable-syntax\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\n * which comes from the key-compression plugin.\n */\nexport const DEXIE_PIPE_SUBSTITUTE = '__';\nexport function dexieReplaceIfStartsWithPipe(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\n    }\n\n    if (str.startsWith('|')) {\n        const withoutFirst = str.substring(1);\n        return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\nexport function dexieReplaceIfStartsWithPipeRevert(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\n    }\n\n    if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\n        const withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\n        return '|' + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\n/**\n * @recursive\n */\nexport function fromStorageToDexie(documentData: RxDocumentData<any>): any {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromStorageToDexie(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object') {\n                value = fromStorageToDexie(value);\n            }\n            ret[dexieReplaceIfStartsWithPipe(key)] = value;\n        });\n        return ret;\n    }\n}\n\nexport function fromDexieToStorage(documentData: any): RxDocumentData<any> {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromDexieToStorage(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object' || Array.isArray(documentData)) {\n                value = fromDexieToStorage(value);\n            }\n            ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\n        });\n        return ret;\n    }\n}\n\n\n/**\n * Creates a string that can be used to create the dexie store.\n * @link https://dexie.org/docs/API-Reference#quick-reference\n */\nexport function getDexieStoreSchema(\n    rxJsonSchema: RxJsonSchema<any>\n): string {\n    let parts: string[][] = [];\n\n    /**\n     * First part must be the primary key\n     * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\n     */\n    const primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n    parts.push([primaryKey]);\n\n    // add other indexes\n    if (rxJsonSchema.indexes) {\n        rxJsonSchema.indexes.forEach(index => {\n            const arIndex = toArray(index);\n            parts.push(arIndex);\n        });\n    }\n\n    // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\n    parts.push(['_meta.lwt', primaryKey]);\n\n    /**\n     * It is not possible to set non-javascript-variable-syntax\n     * keys as IndexedDB indexes. So we have to substitute the pipe-char\n     * which comes from the key-compression plugin.\n     */\n    parts = parts.map(part => {\n        return part.map(str => dexieReplaceIfStartsWithPipe(str));\n    });\n\n    return parts.map(part => {\n        if (part.length === 1) {\n            return part[0];\n        } else {\n            return '[' + part.join('+') + ']';\n        }\n    }).join(', ');\n}\n\n/**\n * Returns all documents in the database.\n * Non-deleted plus deleted ones.\n */\nexport async function getDocsInDb<RxDocType>(\n    internals: DexieStorageInternals,\n    docIds: string[]\n): Promise<RxDocumentData<RxDocType>[]> {\n    const state = await internals;\n    const [\n        nonDeletedDocsInDb,\n        deletedDocsInDb\n    ] = await Promise.all([\n        state.dexieTable.bulkGet(docIds),\n        state.dexieDeletedTable.bulkGet(docIds)\n    ]);\n    const docsInDb = deletedDocsInDb.slice(0);\n    nonDeletedDocsInDb.forEach((doc, idx) => {\n        if (doc) {\n            docsInDb[idx] = doc;\n        }\n    });\n    return docsInDb;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AASA;AAEA;AACA;AACA;AAIA;AAEO,IAAMA,qBAAqB,GAAG,MAAM;AAAC;AACrC,IAAMC,6BAA6B,GAAG,cAAc;AAAC;AACrD,IAAMC,wBAAwB,GAAG,SAAS;AAAC;AAE3C,IAAMC,qBAAqB,GAAG,OAAO;AAAC;AAE7C,IAAMC,sBAA0D,GAAG,IAAIC,GAAG,EAAE;AAC5E,IAAMC,sBAA0D,GAAG,IAAID,GAAG,EAAE;AACrE,SAASE,oBAAoB,CAChCC,YAAoB,EACpBC,cAAsB,EACtBC,QAAuB,EACvBC,MAAyB,EACJ;EACrB,IAAMC,WAAW,GAAG,IAAAC,2CAA2B,EAACF,MAAM,CAACG,UAAU,CAAC;EAClE,IAAMC,WAAW,GAAG,aAAa,GAAGP,YAAY,GAAG,IAAI,GAAGG,MAAM,CAACK,OAAO,GAAG,IAAI,GAAGP,cAAc;EAChG,IAAIQ,KAAK,GAAGb,sBAAsB,CAACc,GAAG,CAACH,WAAW,CAAC;EACnD,IAAI,CAACE,KAAK,EAAE;IACRA,KAAK,GAAG,8EAAC;MAAA;MAAA;MAAA;QAAA;UAAA;YACL;AACZ;AACA;AACA;AACA;YACkBE,WAAW,GAAG,IAAAC,gBAAS,EAACV,QAAQ,CAAC;YACvCS,WAAW,CAACE,QAAQ,GAAG,KAAK;YACtBC,OAAO,GAAG,IAAIC,YAAK,CAACR,WAAW,EAAEI,WAAW,CAAC;YAC7CK,mBAAmB,oDACpBxB,qBAAqB,IAAGyB,mBAAmB,CAACd,MAAM,CAAC,uBACnDT,wBAAwB,IAAG,gBAAgB,uBAU3CD,6BAA6B,IAAGW,WAAW,GAAG,wBAAwB,GAAGA,WAAW,GAAG,GAAG;YAG/FU,OAAO,CAACN,OAAO,CAAC,CAAC,CAAC,CAACU,MAAM,CAACF,mBAAmB,CAAC;YAAC;YAAA,OACzCF,OAAO,CAACK,IAAI,EAAE;UAAA;YAAA,iCACb;cACHL,OAAO,EAAPA,OAAO;cACPM,UAAU,EAAGN,OAAO,CAAStB,qBAAqB,CAAC;cACnD6B,iBAAiB,EAAGP,OAAO,CAASrB,6BAA6B;YACrE,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACJ,IAAG;IAEJG,sBAAsB,CAAC0B,GAAG,CAACf,WAAW,EAAEE,KAAK,CAAC;IAC9CX,sBAAsB,CAACwB,GAAG,CAACb,KAAK,EAAE,CAAC,CAAC;EACxC;EAEA,OAAOA,KAAK;AAChB;AAAC,SAEqBc,YAAY;EAAA;AAAA;AAAA;EAAA,8FAA3B,kBAA4BC,YAAmC;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAC9CA,YAAY;QAAA;UAA1Bf,KAAK;UACLgB,SAAS,GAAG3B,sBAAsB,CAACY,GAAG,CAACc,YAAY,CAAC;UACpDE,QAAQ,GAAID,SAAS,GAAW,CAAC;UACvC,IAAIC,QAAQ,KAAK,CAAC,EAAE;YAChBjB,KAAK,CAACK,OAAO,CAACa,KAAK,EAAE;YACrB7B,sBAAsB,UAAO,CAAC0B,YAAY,CAAC;UAC/C,CAAC,MAAM;YACH1B,sBAAsB,CAACwB,GAAG,CAACE,YAAY,EAAEE,QAAQ,CAAC;UACtD;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CACJ;EAAA;AAAA;AAGD,SAASE,oBAAoB,CAACC,SAAyB,EAAU;EAC7D,IAAIA,SAAS,KAAK,KAAK,EAAE;IACrB,OAAO,CAAC;EACZ,CAAC,MAAM;IACH,OAAO,CAAC,CAAC;EACb;AACJ;;AAEA;AACA;AACA;AACA;AACO,SAASC,sBAAsB,CAClCC,OAAgD,EAChDC,KAA4B,EACU;EACtC,IAAMC,eAEL,GAAG,CAAC,CAAC;EAEN,IAAI,CAACD,KAAK,CAACE,IAAI,EAAE;IACb,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;MAAEH,KAAK,EAALA;IAAM,CAAC,CAAC;EACtC;EAEAA,KAAK,CAACE,IAAI,CAACE,OAAO,CAAC,UAAAC,SAAS,EAAI;IAC5B,IAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;IACrC,IAAMR,SAAS,GAAGU,MAAM,CAACE,MAAM,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7CJ,eAAe,CAACK,GAAG,CAAC,GAAGV,oBAAoB,CAACC,SAAS,CAAC;EAC1D,CAAC,CAAC;EAEF,IAAMa,GAA2C,GAAG,SAA9CA,GAA2C,CAAIC,CAAY,EAAEC,CAAY,EAAK;IAChF,IAAMC,MAAM,GAAG,IAAAC,2BAAa,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAACJ,CAAC,EAAEC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACV,IAAI,CAACD,eAAe,CAAC;IACvE,IAAMe,KAAK,GAAGH,MAAM,CAACI,IAAI,EAAE;IAC3B,IAAID,KAAK,KAAKL,CAAC,EAAE;MACb,OAAO,CAAC,CAAC;IACb,CAAC,MAAM;MACH,OAAO,CAAC;IACZ;EACJ,CAAC;EAED,OAAOD,GAAG;AACd;AAGO,SAASQ,oBAAoB,CAAC/C,MAAyB,EAAE;EAC5D,IAAI,CAACA,MAAM,CAACgD,OAAO,EAAE;IACjB;EACJ;EACA,IAAMC,aAAa,GAAG,IAAIC,GAAG,EAAU;EACvClD,MAAM,CAACgD,OAAO,CAACf,OAAO,CAAC,UAAAkB,KAAK,EAAI;IAC5B,IAAMC,MAAM,GAAG,IAAAC,cAAO,EAACF,KAAK,CAAC;IAC7BC,MAAM,CAACnB,OAAO,CAAC,UAAAqB,KAAK,EAAI;MACpB,IAAIL,aAAa,CAACM,GAAG,CAACD,KAAK,CAAC,EAAE;QAC1B;MACJ;MACAL,aAAa,CAACO,GAAG,CAACF,KAAK,CAAC;MACxB,IAAMG,SAAS,GAAG,IAAAC,qCAAqB,EAAC1D,MAAM,EAAEsD,KAAK,CAAC;MACtD,IAAIG,SAAS,CAACE,IAAI,KAAK,SAAS,EAAE;QAC9B,MAAM,IAAA3B,mBAAU,EAAC,MAAM,EAAE;UACrBhC,MAAM,EAANA,MAAM;UACNmD,KAAK,EAALA,KAAK;UACLG,KAAK,EAALA;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN;;AAIA;AACA;AACA;AACA;AACA;AACO,IAAMM,qBAAqB,GAAG,IAAI;AAAC;AACnC,SAASC,4BAA4B,CAACC,GAAW,EAAU;EAC9D,IAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;EAC5B,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAClB,OAAOD,KAAK,CAACE,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAIL,4BAA4B,CAACK,IAAI,CAAC;IAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC1E;EAEA,IAAIL,GAAG,CAACM,UAAU,CAAC,GAAG,CAAC,EAAE;IACrB,IAAMC,YAAY,GAAGP,GAAG,CAACQ,SAAS,CAAC,CAAC,CAAC;IACrC,OAAOV,qBAAqB,GAAGS,YAAY;EAC/C,CAAC,MAAM;IACH,OAAOP,GAAG;EACd;AACJ;AAEO,SAASS,kCAAkC,CAACT,GAAW,EAAU;EACpE,IAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;EAC5B,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAClB,OAAOD,KAAK,CAACE,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAIK,kCAAkC,CAACL,IAAI,CAAC;IAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAChF;EAEA,IAAIL,GAAG,CAACM,UAAU,CAACR,qBAAqB,CAAC,EAAE;IACvC,IAAMS,YAAY,GAAGP,GAAG,CAACQ,SAAS,CAACV,qBAAqB,CAACI,MAAM,CAAC;IAChE,OAAO,GAAG,GAAGK,YAAY;EAC7B,CAAC,MAAM;IACH,OAAOP,GAAG;EACd;AACJ;;AAEA;AACA;AACA;AACO,SAASU,kBAAkB,CAACC,YAAiC,EAAO;EACvE,IAAI,CAACA,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAI,OAAOA,YAAY,KAAK,SAAS,EAAE;IAC5H,OAAOA,YAAY;EACvB,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;IACpC,OAAOA,YAAY,CAACR,GAAG,CAAC,UAAAW,GAAG;MAAA,OAAIJ,kBAAkB,CAACI,GAAG,CAAC;IAAA,EAAC;EAC3D,CAAC,MAAM,IAAI,OAAOH,YAAY,KAAK,QAAQ,EAAE;IACzC,IAAMI,GAAQ,GAAG,CAAC,CAAC;IACnBzC,MAAM,CAAC0C,OAAO,CAACL,YAAY,CAAC,CAACxC,OAAO,CAAC,iBAAkB;MAAA,IAAhBE,GAAG;QAAE4C,KAAK;MAC7C,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC3BA,KAAK,GAAGP,kBAAkB,CAACO,KAAK,CAAC;MACrC;MACAF,GAAG,CAAChB,4BAA4B,CAAC1B,GAAG,CAAC,CAAC,GAAG4C,KAAK;IAClD,CAAC,CAAC;IACF,OAAOF,GAAG;EACd;AACJ;AAEO,SAASG,kBAAkB,CAACP,YAAiB,EAAuB;EACvE,IAAI,CAACA,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAI,OAAOA,YAAY,KAAK,SAAS,EAAE;IAC5H,OAAOA,YAAY;EACvB,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;IACpC,OAAOA,YAAY,CAACR,GAAG,CAAC,UAAAW,GAAG;MAAA,OAAII,kBAAkB,CAACJ,GAAG,CAAC;IAAA,EAAC;EAC3D,CAAC,MAAM,IAAI,OAAOH,YAAY,KAAK,QAAQ,EAAE;IACzC,IAAMI,GAAQ,GAAG,CAAC,CAAC;IACnBzC,MAAM,CAAC0C,OAAO,CAACL,YAAY,CAAC,CAACxC,OAAO,CAAC,iBAAkB;MAAA,IAAhBE,GAAG;QAAE4C,KAAK;MAC7C,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIL,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;QAC1DM,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAAC;MACrC;MACAF,GAAG,CAACN,kCAAkC,CAACpC,GAAG,CAAC,CAAC,GAAG4C,KAAK;IACxD,CAAC,CAAC;IACF,OAAOF,GAAG;EACd;AACJ;;AAGA;AACA;AACA;AACA;AACO,SAAS/D,mBAAmB,CAC/BmE,YAA+B,EACzB;EACN,IAAIC,KAAiB,GAAG,EAAE;;EAE1B;AACJ;AACA;AACA;EACI,IAAM/E,UAAU,GAAG,IAAAD,2CAA2B,EAAC+E,YAAY,CAAC9E,UAAU,CAAC;EACvE+E,KAAK,CAACC,IAAI,CAAC,CAAChF,UAAU,CAAC,CAAC;;EAExB;EACA,IAAI8E,YAAY,CAACjC,OAAO,EAAE;IACtBiC,YAAY,CAACjC,OAAO,CAACf,OAAO,CAAC,UAAAkB,KAAK,EAAI;MAClC,IAAMiC,OAAO,GAAG,IAAA/B,cAAO,EAACF,KAAK,CAAC;MAC9B+B,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC;IACvB,CAAC,CAAC;EACN;;EAEA;EACAF,KAAK,CAACC,IAAI,CAAC,CAAC,WAAW,EAAEhF,UAAU,CAAC,CAAC;;EAErC;AACJ;AACA;AACA;AACA;EACI+E,KAAK,GAAGA,KAAK,CAACjB,GAAG,CAAC,UAAAC,IAAI,EAAI;IACtB,OAAOA,IAAI,CAACD,GAAG,CAAC,UAAAH,GAAG;MAAA,OAAID,4BAA4B,CAACC,GAAG,CAAC;IAAA,EAAC;EAC7D,CAAC,CAAC;EAEF,OAAOoB,KAAK,CAACjB,GAAG,CAAC,UAAAC,IAAI,EAAI;IACrB,IAAIA,IAAI,CAACF,MAAM,KAAK,CAAC,EAAE;MACnB,OAAOE,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACH,OAAO,GAAG,GAAGA,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;IACrC;EACJ,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AAHA,SAIsBkB,WAAW;EAAA;AAAA;AAAA;EAAA,6FAA1B,kBACHC,SAAgC,EAChCC,MAAgB;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEID,SAAS;QAAA;UAAvBhF,KAAK;UAAA;UAAA,OAIDkF,OAAO,CAACC,GAAG,CAAC,CAClBnF,KAAK,CAACW,UAAU,CAACyE,OAAO,CAACH,MAAM,CAAC,EAChCjF,KAAK,CAACY,iBAAiB,CAACwE,OAAO,CAACH,MAAM,CAAC,CAC1C,CAAC;QAAA;UAAA;UALEI,kBAAkB;UAClBC,eAAe;UAKbC,QAAQ,GAAGD,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;UACzCH,kBAAkB,CAAC1D,OAAO,CAAC,UAAC8D,GAAG,EAAEC,GAAG,EAAK;YACrC,IAAID,GAAG,EAAE;cACLF,QAAQ,CAACG,GAAG,CAAC,GAAGD,GAAG;YACvB;UACJ,CAAC,CAAC;UAAC,kCACIF,QAAQ;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAClB;EAAA;AAAA"}