{"version":3,"file":"rx-local-document.js","names":["RxDocumentParent","createRxDocumentConstructor","RxLocalDocumentClass","id","jsonData","parent","RxLocalDocumentPrototype","isLocal","allAttachments$","newRxError","document","primaryPath","primary","$","_this","pipe","filter","changeEvent","documentId","map","getDocumentDataOfRxChangeEvent","startWith","_data","distinctUntilChanged","prev","curr","_rev","shareReplay","RXJS_SHARE_REPLAY_DEFAULTS","getLatest","state","getFromMapOrThrow","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","latestDocData","docCache","getLatestDocumentData","getCachedRxDocument","get","objPath","undefined","newRxTypeError","valueObj","objectPath","overwritable","deepFreezeWhenDevMode","get$","isDevMode","includes","data","incrementalModify","mutationFunction","getLocalDocStateByParent","incrementalWriteQueue","addWrite","docData","then","result","incrementalPatch","patch","Object","entries","forEach","k","v","_saveData","newData","oldData","storageInstance","bulkWrite","previous","res","docResult","success","getFromObjectOrThrow","error","flatClone","remove","writeData","_deleted","_meta","getDefaultRxDocumentMeta","getDefaultRevision","_attachments","writeSingle","writeResult","INIT_DONE","_init","docBaseProto","basePrototype","props","getOwnPropertyNames","key","exists","getOwnPropertyDescriptor","desc","defineProperty","getThrowingFun","functionName","createRxLocalDocument","newDoc","setPrototypeOf","prototype"],"sources":["../../../../src/plugins/local-documents/rx-local-document.ts"],"sourcesContent":["import objectPath from 'object-path';\nimport { Observable } from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs/operators';\nimport { overwritable } from '../../overwritable';\nimport { getDocumentDataOfRxChangeEvent } from '../../rx-change-event';\nimport {\n    basePrototype,\n    createRxDocumentConstructor\n} from '../../rx-document';\nimport {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error';\nimport { writeSingle } from '../../rx-storage-helper';\nimport type {\n    LocalDocumentModifyFunction,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types';\nimport {\n    flatClone,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    getFromMapOrThrow,\n    getFromObjectOrThrow,\n    RXJS_SHARE_REPLAY_DEFAULTS\n} from '../../plugins/utils';\nimport { getLocalDocStateByParent, LOCAL_DOC_STATE_BY_PARENT_RESOLVED } from './local-documents-helper';\n\nconst RxDocumentParent = createRxDocumentConstructor() as any;\n\nclass RxLocalDocumentClass<DocData = any> extends RxDocumentParent {\n    constructor(\n        public readonly id: string,\n        jsonData: DocData,\n        public readonly parent: RxCollection | RxDatabase\n    ) {\n        super(null, jsonData);\n    }\n}\n\n\n\nconst RxLocalDocumentPrototype: any = {\n    get isLocal() {\n        return true;\n    },\n\n    //\n    // overwrites\n    //\n    get allAttachments$() {\n        // this is overwritten here because we cannot re-set getters on the prototype\n        throw newRxError('LD1', {\n            document: this\n        });\n    },\n    get primaryPath() {\n        return 'id';\n    },\n    get primary() {\n        return this.id;\n    },\n    get $(): Observable<RxDocumentData<RxLocalDocumentData>> {\n        const _this: RxLocalDocumentClass = this as any;\n        return _this.parent.$.pipe(\n            filter(changeEvent => changeEvent.isLocal),\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(this._data),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        );\n    },\n    getLatest(this: RxLocalDocument<any>): RxLocalDocument<any> {\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n        const latestDocData = state.docCache.getLatestDocumentData(this.primary);\n        return state.docCache.getCachedRxDocument(latestDocData) as any;\n    },\n    get(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (!this._data) {\n            return undefined;\n        }\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('LD2', {\n                objPath\n            });\n        }\n\n        let valueObj = objectPath.get(this._data, objPath);\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\n        return valueObj;\n    },\n    get$(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (overwritable.isDevMode()) {\n            if (objPath.includes('.item.')) {\n                throw newRxError('LD3', {\n                    objPath\n                });\n            }\n            if (objPath === this.primaryPath) {\n                throw newRxError('LD4');\n            }\n        }\n        return this.$\n            .pipe(\n                map(data => objectPath.get(data, objPath)),\n                distinctUntilChanged()\n            );\n    },\n    async incrementalModify<DocData>(\n        this: RxLocalDocument<any, DocData>,\n        mutationFunction: LocalDocumentModifyFunction<any>\n    ) {\n        const state = await getLocalDocStateByParent(this.parent);\n\n        return state.incrementalWriteQueue.addWrite(\n            this._data as any,\n            async (docData) => {\n                docData.data = await mutationFunction(docData.data, this);\n                return docData;\n            }\n        ).then(result => state.docCache.getCachedRxDocument(result as any));\n    },\n    incrementalPatch(patch: Partial<any>) {\n        return this.incrementalModify((docData: any) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    docData[k] = v;\n                });\n            return docData;\n        });\n    },\n    async _saveData(this: RxLocalDocument<any>, newData: RxDocumentData<RxLocalDocumentData>) {\n        const state = await getLocalDocStateByParent(this.parent);\n        const oldData: RxDocumentData<RxLocalDocumentData> = this._data;\n        newData.id = (this as any).id;\n        return state.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'local-document-save-data')\n            .then((res) => {\n                const docResult = res.success[newData.id];\n                if (!docResult) {\n                    throw getFromObjectOrThrow(res.error, newData.id);\n                }\n                newData = flatClone(newData);\n                newData._rev = docResult._rev;\n            });\n    },\n\n    async remove(this: RxLocalDocument<any>): Promise<RxLocalDocument<any>> {\n        const state = await getLocalDocStateByParent(this.parent);\n        const writeData: RxDocumentWriteData<RxLocalDocumentData> = {\n            id: this._data.id,\n            data: {},\n            _deleted: true,\n            _meta: getDefaultRxDocumentMeta(),\n            _rev: getDefaultRevision(),\n            _attachments: {}\n        };\n        return writeSingle(state.storageInstance, {\n            previous: this._data,\n            document: writeData\n        }, 'local-document-remove')\n            .then((writeResult) => state.docCache.getCachedRxDocument(writeResult) as any);\n    }\n};\n\n\n\nlet INIT_DONE = false;\nconst _init = () => {\n    if (INIT_DONE) return;\n    else INIT_DONE = true;\n\n    // add functions of RxDocument\n    const docBaseProto = basePrototype;\n    const props = Object.getOwnPropertyNames(docBaseProto);\n    props.forEach(key => {\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\n        if (exists) return;\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\n    });\n\n\n    /**\n     * Overwrite things that do not work on local documents\n     * with a throwing function.\n     */\n    const getThrowingFun = (k: string) => () => {\n        throw newRxError('LD6', {\n            functionName: k\n        });\n    };\n    [\n        'populate',\n        'update',\n        'putAttachment',\n        'getAttachment',\n        'allAttachments'\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\n};\n\n\n\nexport function createRxLocalDocument<DocData>(\n    data: RxDocumentData<RxLocalDocumentData<DocData>>,\n    parent: any\n): RxLocalDocument<DocData> {\n    _init();\n    const newDoc = new RxLocalDocumentClass(data.id, data, parent);\n    Object.setPrototypeOf(newDoc, RxLocalDocumentPrototype);\n    newDoc.prototype = RxLocalDocumentPrototype;\n    return newDoc as any;\n}\n"],"mappings":"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"}